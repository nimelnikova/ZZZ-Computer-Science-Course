// Решите поставленную задачу в формате четвёрок


// Поставим звёздочку вместо изначального пробела, чтобы знать, где число заканчивается
00, ,*,c

// c(checker) ищет первую цифру справа, чтобы потом запустить состояние, которое попытается
// найти такую цифру слева. Пометим уже проверенную цифру.
// Если вдруг чекер дошёл до левого края слова, то все цифры проверены, можно заканчивать.
c,*,<,c
c,i,<,c
c,o,<,c
c,1,i,l1
c,0,o,l0
c, ,=,Le

// Состояние, которое идёт до конца слова влево, а потом передаёт управление чекеру c0
l0,0,<,l0
l0,1,<,l0
l0,o,<,l0
l0,i,<,l0
l0, ,>,c0

// Аналогично l0, но в конце запускается чекер c1
l1,0,<,l1
l1,1,<,l1
l1,o,<,l1
l1,i,<,l1
l1, ,>,c1

// Т.к. c0 запускается тогда, когда чекер c нашёл ноль,
// if (найден 0) {
//	идти вправо, чтобы (если ещё не записан результат) заменить пробел на 1 (true)
//} else {
//	идти вправо, чтобы переписать результат на 0 (false)
//}
c0,0,o,r1
c0,o,>,c0
c0,1,i,r0
c0,i,>,c0
c0,*,=,r1

// Аналогично c0, но при нахождении 1 идёт вправо, чтобы записать 1,
// а при 0 идёт вправо, чтобы записать 0
c1,0,o,r0
c1,o,>,c1
c1,1,i,r1
c1,i,>,c1
c1,*,=,r1

// Два состояния, которые поставят головку на место ответа (чтобы его перезаписать)
r0,0,>,r0
r0,o,>,r0
r0,1,>,r0
r0,i,>,r0
r0,*,>,w0

r1,0,>,r1
r1,o,>,r1
r1,1,>,r1
r1,i,>,r1
r1,*,>,w1


// Если мы хотели поставить 1, то 0 переписывать нельзя (т.к. нужен хотя бы один 0,
// число не считалось палиндромом)
// Если мы встретили 0, то сразу завершаем программу, число уже точно не палиндром.
w1,0,=,Le
w1,1,=,h
w1, ,1,h

// Если мы хотели поставить 0, то его стоит записать вместо прежнего ответа,
// сразу завершить программу.
w0,0,=,Le
w0,1,0,Le
w0, ,0,Le

// Сотояние, которое возвращает каретку до символа звёздочки,
// чтобы запустить второй цикл программы.
h,0,<,h
h,1,<,h
h,*,=,c

// До упора влево, чтобы пройтись по числу, восстановить прежний его вид и завершиться
Le,0,<,Le
Le,o,<,Le
Le,1,<,Le
Le,i,<,Le
Le,*,<,Le
Le, ,>,end

// Возвращаем число в прежний вид и завершаемся.
end,0,>,end
end,o,0,re
end,1,>,end
end,i,1,re
end,*, ,re
end, ,#,end

re,0,>,end
re,1,>,end
re, ,>,end
